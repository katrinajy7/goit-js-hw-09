{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,aAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,0BAG3BF,KAAEM,EAAIH,MAAEI,EAAKH,KAAEI,EAAIH,OAAEI,GAAWV,EAuBtC,SAASW,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE7B,MAAMC,EAAgBC,KAAKC,SAAW,GACvCC,YAAW,KACPH,EAEDF,EAAQ,C,SAAEH,EAAUR,MAAAS,IAGrBG,EAAO,C,SAAEJ,EAAUR,MAAAS,GAAQ,GAEzBA,EAAM,G,CAjCXN,EAAKc,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBACN,IAAIC,EAAYC,OAAOjB,EAAMkB,OAC7B,IAAK,IAAIC,EAAgB,EAAGA,GAAiBjB,EAAOgB,MAAOC,IACzDhB,EAAcgB,EAAeH,GAC5BI,MAAK,EAAChB,SAAEA,EAAUR,MAAAyB,MACjB/B,EAAAgC,OAAOC,QAAQ,qBAAqBnB,QAAeiB,MAAU,IAG9DG,OAAM,EAACpB,SAAEA,EAAUR,MAAA6B,MAClBnC,EAAAgC,OAAOI,QAAQ,oBAAoBtB,QAAeqB,MAAU,IAGhET,GAAcC,OAAOhB,EAAKiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-aio';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  delay: document.querySelector(\"input[name='delay']\"),\n  step: document.querySelector(\"input[name='step']\"),\n  amount: document.querySelector(\"input[name='amount']\"),\n};\n\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener('submit', promiseGenerator);\n\nfunction promiseGenerator(event) {\n  event.preventDefault();\n  let delayValue= Number(delay.value);\n  for (let positionValue = 1; positionValue <= amount.value; positionValue++) {\n    createPromise(positionValue, delayValue)\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`);;\n    });\n  \n  delayValue += Number(step.value);\n  }\n}\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => { \n  //Math.random() generates a random # from 0.1 - 0.9999 but its never gonna reach 1 or 0\n  const shouldResolve = Math.random() > 0.3;\n setTimeout(() => {\n if (shouldResolve) {\n  // Fulfill\n    resolve({ position, delay });\n    } else {\n  //Reject\n   reject({ position, delay });\n  }\n  }, delay);\n});\n}\n  \n"],"names":["$8UVxz","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","positionValue","then","delay1","Notify","success","catch","delay2","failure"],"version":3,"file":"03-promises.ac32bbb8.js.map"}